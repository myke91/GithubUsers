// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.viewmodel;

import com.myke.sharecare.feature.user.interactors.GetGithubUsersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserViewModelFactory_Factory implements Factory<GithubUserViewModelFactory> {
  private final Provider<GetGithubUsersUseCase> usecaseProvider;

  public GithubUserViewModelFactory_Factory(Provider<GetGithubUsersUseCase> usecaseProvider) {
    this.usecaseProvider = usecaseProvider;
  }

  @Override
  public GithubUserViewModelFactory get() {
    return newInstance(usecaseProvider.get());
  }

  public static GithubUserViewModelFactory_Factory create(
      Provider<GetGithubUsersUseCase> usecaseProvider) {
    return new GithubUserViewModelFactory_Factory(usecaseProvider);
  }

  public static GithubUserViewModelFactory newInstance(GetGithubUsersUseCase usecase) {
    return new GithubUserViewModelFactory(usecase);
  }
}
