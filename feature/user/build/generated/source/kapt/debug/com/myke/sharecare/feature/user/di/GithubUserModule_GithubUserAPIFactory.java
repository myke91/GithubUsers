// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.di;

import com.myke.sharecare.feature.user.data.source.remote.GithubUserApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserModule_GithubUserAPIFactory implements Factory<GithubUserApi> {
  private final GithubUserModule module;

  private final Provider<Retrofit> retrofitProvider;

  public GithubUserModule_GithubUserAPIFactory(GithubUserModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public GithubUserApi get() {
    return githubUserAPI(module, retrofitProvider.get());
  }

  public static GithubUserModule_GithubUserAPIFactory create(GithubUserModule module,
      Provider<Retrofit> retrofitProvider) {
    return new GithubUserModule_GithubUserAPIFactory(module, retrofitProvider);
  }

  public static GithubUserApi githubUserAPI(GithubUserModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.githubUserAPI(retrofit));
  }
}
