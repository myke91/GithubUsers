// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.di;

import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserModule_RetrofitFactory implements Factory<Retrofit> {
  private final GithubUserModule module;

  private final Provider<OkHttpClient> clientProvider;

  private final Provider<Moshi> moshiProvider;

  public GithubUserModule_RetrofitFactory(GithubUserModule module,
      Provider<OkHttpClient> clientProvider, Provider<Moshi> moshiProvider) {
    this.module = module;
    this.clientProvider = clientProvider;
    this.moshiProvider = moshiProvider;
  }

  @Override
  public Retrofit get() {
    return retrofit(module, clientProvider.get(), moshiProvider.get());
  }

  public static GithubUserModule_RetrofitFactory create(GithubUserModule module,
      Provider<OkHttpClient> clientProvider, Provider<Moshi> moshiProvider) {
    return new GithubUserModule_RetrofitFactory(module, clientProvider, moshiProvider);
  }

  public static Retrofit retrofit(GithubUserModule instance, OkHttpClient client, Moshi moshi) {
    return Preconditions.checkNotNullFromProvides(instance.retrofit(client, moshi));
  }
}
