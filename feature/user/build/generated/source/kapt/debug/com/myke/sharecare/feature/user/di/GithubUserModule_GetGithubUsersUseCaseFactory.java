// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.di;

import com.myke.sharecare.feature.user.data.GithubUserRepository;
import com.myke.sharecare.feature.user.interactors.GetGithubUsersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserModule_GetGithubUsersUseCaseFactory implements Factory<GetGithubUsersUseCase> {
  private final GithubUserModule module;

  private final Provider<GithubUserRepository> repositoryProvider;

  public GithubUserModule_GetGithubUsersUseCaseFactory(GithubUserModule module,
      Provider<GithubUserRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetGithubUsersUseCase get() {
    return getGithubUsersUseCase(module, repositoryProvider.get());
  }

  public static GithubUserModule_GetGithubUsersUseCaseFactory create(GithubUserModule module,
      Provider<GithubUserRepository> repositoryProvider) {
    return new GithubUserModule_GetGithubUsersUseCaseFactory(module, repositoryProvider);
  }

  public static GetGithubUsersUseCase getGithubUsersUseCase(GithubUserModule instance,
      GithubUserRepository repository) {
    return Preconditions.checkNotNullFromProvides(instance.getGithubUsersUseCase(repository));
  }
}
