// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.interactors;

import com.myke.sharecare.feature.user.data.GithubUserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetGithubUsersUseCase_Factory implements Factory<GetGithubUsersUseCase> {
  private final Provider<GithubUserRepository> repositoryProvider;

  public GetGithubUsersUseCase_Factory(Provider<GithubUserRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetGithubUsersUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetGithubUsersUseCase_Factory create(
      Provider<GithubUserRepository> repositoryProvider) {
    return new GetGithubUsersUseCase_Factory(repositoryProvider);
  }

  public static GetGithubUsersUseCase newInstance(GithubUserRepository repository) {
    return new GetGithubUsersUseCase(repository);
  }
}
