// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.details.di;

import com.myke.sharecare.feature.details.data.GithubUserDetailsRepository;
import com.myke.sharecare.feature.details.interactors.GetGithubUserDetailsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserDetailsModule_GetGithubUserDetailsUseCaseFactory implements Factory<GetGithubUserDetailsUseCase> {
  private final GithubUserDetailsModule module;

  private final Provider<GithubUserDetailsRepository> repositoryProvider;

  public GithubUserDetailsModule_GetGithubUserDetailsUseCaseFactory(GithubUserDetailsModule module,
      Provider<GithubUserDetailsRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetGithubUserDetailsUseCase get() {
    return getGithubUserDetailsUseCase(module, repositoryProvider.get());
  }

  public static GithubUserDetailsModule_GetGithubUserDetailsUseCaseFactory create(
      GithubUserDetailsModule module, Provider<GithubUserDetailsRepository> repositoryProvider) {
    return new GithubUserDetailsModule_GetGithubUserDetailsUseCaseFactory(module, repositoryProvider);
  }

  public static GetGithubUserDetailsUseCase getGithubUserDetailsUseCase(
      GithubUserDetailsModule instance, GithubUserDetailsRepository repository) {
    return Preconditions.checkNotNullFromProvides(instance.getGithubUserDetailsUseCase(repository));
  }
}
