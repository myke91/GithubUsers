// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.details.viewmodel;

import com.myke.sharecare.feature.details.interactors.GetGithubUserDetailsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserDetailsViewModelFactory_Factory implements Factory<GithubUserDetailsViewModelFactory> {
  private final Provider<GetGithubUserDetailsUseCase> usecaseProvider;

  public GithubUserDetailsViewModelFactory_Factory(
      Provider<GetGithubUserDetailsUseCase> usecaseProvider) {
    this.usecaseProvider = usecaseProvider;
  }

  @Override
  public GithubUserDetailsViewModelFactory get() {
    return newInstance(usecaseProvider.get());
  }

  public static GithubUserDetailsViewModelFactory_Factory create(
      Provider<GetGithubUserDetailsUseCase> usecaseProvider) {
    return new GithubUserDetailsViewModelFactory_Factory(usecaseProvider);
  }

  public static GithubUserDetailsViewModelFactory newInstance(GetGithubUserDetailsUseCase usecase) {
    return new GithubUserDetailsViewModelFactory(usecase);
  }
}
