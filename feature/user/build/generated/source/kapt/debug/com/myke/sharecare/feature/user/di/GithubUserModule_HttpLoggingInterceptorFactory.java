// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserModule_HttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final GithubUserModule module;

  public GithubUserModule_HttpLoggingInterceptorFactory(GithubUserModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return httpLoggingInterceptor(module);
  }

  public static GithubUserModule_HttpLoggingInterceptorFactory create(GithubUserModule module) {
    return new GithubUserModule_HttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor httpLoggingInterceptor(GithubUserModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.httpLoggingInterceptor());
  }
}
