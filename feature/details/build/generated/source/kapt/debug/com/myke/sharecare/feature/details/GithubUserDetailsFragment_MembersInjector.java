// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.details;

import com.myke.sharecare.feature.details.viewmodel.GithubUserDetailsViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserDetailsFragment_MembersInjector implements MembersInjector<GithubUserDetailsFragment> {
  private final Provider<GithubUserDetailsViewModelFactory> viewModelFactoryProvider;

  public GithubUserDetailsFragment_MembersInjector(
      Provider<GithubUserDetailsViewModelFactory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<GithubUserDetailsFragment> create(
      Provider<GithubUserDetailsViewModelFactory> viewModelFactoryProvider) {
    return new GithubUserDetailsFragment_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(GithubUserDetailsFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.myke.sharecare.feature.details.GithubUserDetailsFragment.viewModelFactory")
  public static void injectViewModelFactory(GithubUserDetailsFragment instance,
      GithubUserDetailsViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
