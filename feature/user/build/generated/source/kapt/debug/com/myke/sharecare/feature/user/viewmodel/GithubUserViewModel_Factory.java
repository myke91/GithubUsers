// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.viewmodel;

import com.myke.sharecare.feature.user.interactors.GetGithubUsersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserViewModel_Factory implements Factory<GithubUserViewModel> {
  private final Provider<GetGithubUsersUseCase> useCaseProvider;

  public GithubUserViewModel_Factory(Provider<GetGithubUsersUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public GithubUserViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static GithubUserViewModel_Factory create(
      Provider<GetGithubUsersUseCase> useCaseProvider) {
    return new GithubUserViewModel_Factory(useCaseProvider);
  }

  public static GithubUserViewModel newInstance(GetGithubUsersUseCase useCase) {
    return new GithubUserViewModel(useCase);
  }
}
