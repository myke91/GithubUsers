// Generated by Dagger (https://dagger.dev).
package com.myke.sharecare.feature.user.data;

import com.myke.sharecare.feature.user.data.source.GithubUserDatasource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubUserRepository_Factory implements Factory<GithubUserRepository> {
  private final Provider<GithubUserDatasource> datasourceProvider;

  public GithubUserRepository_Factory(Provider<GithubUserDatasource> datasourceProvider) {
    this.datasourceProvider = datasourceProvider;
  }

  @Override
  public GithubUserRepository get() {
    return newInstance(datasourceProvider.get());
  }

  public static GithubUserRepository_Factory create(
      Provider<GithubUserDatasource> datasourceProvider) {
    return new GithubUserRepository_Factory(datasourceProvider);
  }

  public static GithubUserRepository newInstance(GithubUserDatasource datasource) {
    return new GithubUserRepository(datasource);
  }
}
